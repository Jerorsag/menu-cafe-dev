---
import { Filter, X, Zap, Briefcase, Dumbbell, Heart, ShoppingBag, Star, TrendingUp, Sparkles, Award } from '@lucide/astro';
---

<div class="bg-card rounded-2xl border border-card p-6 sticky top-24">
  <!-- Header del Sidebar -->
  <div class="flex items-center justify-between mb-6">
    <div class="flex items-center gap-2">
      <Filter class="text-accent w-5 h-5" />
      <h3 class="text-header font-semibold">Filtros Inteligentes</h3>
    </div>
    <button id="sidebar-toggle" class="lg:hidden text-layout hover:text-accent">
      <X class="w-5 h-5" />
    </button>
  </div>
  
  <!-- Filtros por Experiencia -->
  <div class="mb-8">
    <h4 class="text-header font-medium mb-4 text-sm uppercase tracking-wide">Por Experiencia</h4>
    <div class="space-y-2">
      <button class="experience-filter w-full flex items-center gap-3 p-3 rounded-lg bg-layout hover:bg-accent/10 transition-all text-left" data-filter="pausa-rapida">
        <Zap class="text-accent w-4 h-4 flex-shrink-0" />
        <div>
          <div class="font-medium text-layout text-sm">Pausa Rápida</div>
          <div class="text-xs opacity-70 text-layout">Para llevar en minutos</div>
        </div>
      </button>
      
      <button class="experience-filter w-full flex items-center gap-3 p-3 rounded-lg bg-layout hover:bg-accent/10 transition-all text-left" data-filter="trabajo-reuniones">
        <Briefcase class="text-accent w-4 h-4 flex-shrink-0" />
        <div>
          <div class="font-medium text-layout text-sm">Trabajo & Reuniones</div>
          <div class="text-xs opacity-70 text-layout">Profesional y elegante</div>
        </div>
      </button>
      
      <button class="experience-filter w-full flex items-center gap-3 p-3 rounded-lg bg-layout hover:bg-accent/10 transition-all text-left" data-filter="post-gimnasio">
        <Dumbbell class="text-accent w-4 h-4 flex-shrink-0" />
        <div>
          <div class="font-medium text-layout text-sm">Post-Gym</div>
          <div class="text-xs opacity-70 text-layout">Saludable y energizante</div>
        </div>
      </button>
      
      <button class="experience-filter w-full flex items-center gap-3 p-3 rounded-lg bg-layout hover:bg-accent/10 transition-all text-left" data-filter="momento-relax">
        <Heart class="text-accent w-4 h-4 flex-shrink-0" />
        <div>
          <div class="font-medium text-layout text-sm">Momento Relax</div>
          <div class="text-xs opacity-70 text-layout">Para disfrutar sin prisa</div>
        </div>
      </button>
      
      <button class="experience-filter w-full flex items-center gap-3 p-3 rounded-lg bg-layout hover:bg-accent/10 transition-all text-left" data-filter="para-llevar">
        <ShoppingBag class="text-accent w-4 h-4 flex-shrink-0" />
        <div>
          <div class="font-medium text-layout text-sm">Para Llevar</div>
          <div class="text-xs opacity-70 text-layout">Empacado perfectamente</div>
        </div>
      </button>
    </div>
  </div>
  
  <!-- Filtros por Popularidad -->
  <div class="mb-8">
    <h4 class="text-header font-medium mb-4 text-sm uppercase tracking-wide">Por Popularidad</h4>
    <div class="space-y-2">
      <button class="popularity-filter w-full flex items-center gap-3 p-3 rounded-lg bg-layout hover:bg-accent/10 transition-all text-left" data-filter="favoritos-mocawa">
        <Star class="text-yellow-500 w-4 h-4 flex-shrink-0" />
        <div>
          <div class="font-medium text-layout text-sm">Favoritos Mocawa</div>
          <div class="text-xs opacity-70 text-layout">Los más amados</div>
        </div>
      </button>
      
      <button class="popularity-filter w-full flex items-center gap-3 p-3 rounded-lg bg-layout hover:bg-accent/10 transition-all text-left" data-filter="mas-pedidos">
        <TrendingUp class="text-red-500 w-4 h-4 flex-shrink-0" />
        <div>
          <div class="font-medium text-layout text-sm">Más Pedidos Hoy</div>
          <div class="text-xs opacity-70 text-layout">Tendencia actual</div>
        </div>
      </button>
      
      <button class="popularity-filter w-full flex items-center gap-3 p-3 rounded-lg bg-layout hover:bg-accent/10 transition-all text-left" data-filter="nuevos">
        <Sparkles class="text-blue-500 w-4 h-4 flex-shrink-0" />
        <div>
          <div class="font-medium text-layout text-sm">Nuevos</div>
          <div class="text-xs opacity-70 text-layout">Recién llegados</div>
        </div>
      </button>
      
      <button class="popularity-filter w-full flex items-center gap-3 p-3 rounded-lg bg-layout hover:bg-accent/10 transition-all text-left" data-filter="especiales-chef">
        <Award class="text-purple-500 w-4 h-4 flex-shrink-0" />
        <div>
          <div class="font-medium text-layout text-sm">Especiales del Chef</div>
          <div class="text-xs opacity-70 text-layout">Selección premium</div>
        </div>
      </button>
    </div>
  </div>
  
  <!-- Botón Limpiar Filtros -->
  <button id="clear-filters" class="w-full py-3 px-4 bg-layout border border-card rounded-lg text-layout hover:bg-accent/10 transition-all font-medium text-sm">
    Limpiar Filtros
  </button>
  
  <!-- Filtros Activos -->
  <div id="active-filters" class="mt-4 hidden">
    <h5 class="text-header font-medium mb-2 text-xs uppercase tracking-wide">Filtros Activos</h5>
    <div id="active-filters-list" class="flex flex-wrap gap-2"></div>
  </div>
</div>

<script>
  let activeFilters = [];
  
  // Función para agregar/remover filtro
  function toggleFilter(filterValue, filterType, buttonElement) {
    const filterIndex = activeFilters.findIndex(f => f.value === filterValue);
    
    if (filterIndex === -1) {
      // Agregar filtro
      activeFilters.push({ value: filterValue, type: filterType, element: buttonElement });
      buttonElement.classList.add('bg-accent/20', 'ring-2', 'ring-accent/30');
    } else {
      // Remover filtro
      activeFilters.splice(filterIndex, 1);
      buttonElement.classList.remove('bg-accent/20', 'ring-2', 'ring-accent/30');
    }
    
    updateActiveFiltersDisplay();
    updateMenuState({ activeFilters: activeFilters.map(f => f.value) });
  }
  
  // Función para mostrar filtros activos
  function updateActiveFiltersDisplay() {
    const activeFiltersContainer = document.getElementById('active-filters');
    const activeFiltersList = document.getElementById('active-filters-list');
    
    if (activeFilters.length > 0) {
      activeFiltersContainer.classList.remove('hidden');
      activeFiltersList.innerHTML = activeFilters.map(filter => 
        `<span class="inline-flex items-center gap-1 px-2 py-1 bg-accent/20 text-accent text-xs rounded-full">
          ${filter.value.replace('-', ' ')}
          <button onclick="removeFilter('${filter.value}')" class="hover:bg-accent/30 rounded-full p-0.5">
            <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
            </svg>
          </button>
        </span>`
      ).join('');
    } else {
      activeFiltersContainer.classList.add('hidden');
    }
  }
  
  // Función para remover filtro específico
  function removeFilter(filterValue) {
    const filterIndex = activeFilters.findIndex(f => f.value === filterValue);
    if (filterIndex !== -1) {
      const filter = activeFilters[filterIndex];
      filter.element.classList.remove('bg-accent/20', 'ring-2', 'ring-accent/30');
      activeFilters.splice(filterIndex, 1);
      updateActiveFiltersDisplay();
      updateMenuState({ activeFilters: activeFilters.map(f => f.value) });
    }
  }
  
  // Event listeners para filtros de experiencia
  document.querySelectorAll('.experience-filter').forEach(button => {
    button.addEventListener('click', () => {
      const filterValue = button.getAttribute('data-filter');
      toggleFilter(filterValue, 'experience', button);
    });
  });
  
  // Event listeners para filtros de popularidad
  document.querySelectorAll('.popularity-filter').forEach(button => {
    button.addEventListener('click', () => {
      const filterValue = button.getAttribute('data-filter');
      toggleFilter(filterValue, 'popularity', button);
    });
  });
  
  // Limpiar filtros
  document.getElementById('clear-filters').addEventListener('click', () => {
    activeFilters.forEach(filter => {
      filter.element.classList.remove('bg-accent/20', 'ring-2', 'ring-accent/30');
    });
    activeFilters = [];
    updateActiveFiltersDisplay();
    updateMenuState({ activeFilters: [] });
  });
  
  // Función global para remover filtros
  window.removeFilter = removeFilter;
</script>