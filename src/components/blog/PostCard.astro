---
import "../../styles/global.css"
import { Calendar, Clock, Tag, Leaf, Briefcase, Heart, Home, Coffee } from '@lucide/astro';

export interface Props {
  title: string;
  description: string;
  image: string;
  publishDate: Date;
  tags: string[];
  slug: string;
  featured?: boolean;
}

const { title, description, image, publishDate, tags, slug, featured = false } = Astro.props;

// Formatear fecha
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('es-CO', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  }).format(date);
};

// Calcular tiempo de lectura estimado (basado en palabras promedio)
const estimatedReadTime = Math.ceil(description.split(' ').length / 200) + 3; // +3 min base para lectura completa

// Mapear categorías a iconos y colores
const getCategoryStyle = (tag: string) => {
  const normalizedTag = tag.toLowerCase();
  
  if (normalizedTag.includes('cultura') || normalizedTag.includes('café') || normalizedTag.includes('historia')) {
    return { icon: Leaf, color: 'text-green-500', bg: 'bg-green-50' };
  }
  if (normalizedTag.includes('productividad') || normalizedTag.includes('trabajo') || normalizedTag.includes('profesional')) {
    return { icon: Briefcase, color: 'text-blue-500', bg: 'bg-blue-50' };
  }
  if (normalizedTag.includes('bienestar') || normalizedTag.includes('salud') || normalizedTag.includes('mindful')) {
    return { icon: Heart, color: 'text-pink-500', bg: 'bg-pink-50' };
  }
  if (normalizedTag.includes('comunidad') || normalizedTag.includes('mocawa') || normalizedTag.includes('eventos')) {
    return { icon: Home, color: 'text-orange-500', bg: 'bg-orange-50' };
  }
  
  // Default
  return { icon: Coffee, color: 'text-accent', bg: 'bg-accent/10' };
};

// Determinar si es contenido especial (mensual)
const isSpecialContent = tags.some(tag => 
  tag.toLowerCase().includes('guía') || 
  tag.toLowerCase().includes('manual') || 
  tag.toLowerCase().includes('entrevista') ||
  tag.toLowerCase().includes('evento')
);
---

<article class={`
  group bg-card rounded-2xl border border-card overflow-hidden 
  hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1
  ${featured ? 'ring-2 ring-accent/20' : ''}
  ${isSpecialContent ? 'border-accent/30' : ''}
`}>
  <!-- Imagen -->
  <div class="relative overflow-hidden">
    <img 
      src={image} 
      alt={title}
      class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
      loading="lazy"
    />
    
    <!-- Badges -->
    <div class="absolute top-4 left-4 flex gap-2">
      {featured && (
        <span class="bg-accent text-white px-3 py-1 rounded-full text-xs font-semibold">
          Destacado
        </span>
      )}
      {isSpecialContent && (
        <span class="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-3 py-1 rounded-full text-xs font-semibold">
          Contenido Especial
        </span>
      )}
    </div>
    
    <!-- Overlay gradient -->
    <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  </div>

  <!-- Contenido -->
  <div class="p-6">
    <!-- Tags con iconos de categoría -->
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-3">
        {tags.slice(0, 2).map(tag => {
          const categoryStyle = getCategoryStyle(tag);
          const IconComponent = categoryStyle.icon;
          return (
            <span class={`inline-flex items-center gap-1 ${categoryStyle.bg} ${categoryStyle.color} px-2 py-1 rounded-md text-xs font-medium`}>
              <IconComponent class="w-3 h-3" />
              {tag}
            </span>
          );
        })}
        {tags.length > 2 && (
          <span class="text-xs text-layout opacity-60 self-center">
            +{tags.length - 2} más
          </span>
        )}
      </div>
    )}

    <!-- Título -->
    <h3 class="text-xl font-bold text-layout mb-3 line-clamp-2 group-hover:text-accent transition-colors duration-200">
      <a href={`/blog/${slug}`} class="hover:underline">
        {title}
      </a>
    </h3>

    <!-- Descripción -->
    <p class="text-layout opacity-75 mb-4 line-clamp-3 leading-relaxed">
      {description}
    </p>

    <!-- Meta información -->
    <div class="flex items-center justify-between text-sm text-layout opacity-60 border-t border-card pt-4">
      <div class="flex items-center gap-4">
        <!-- Fecha -->
        <div class="flex items-center gap-1">
          <Calendar class="w-4 h-4" />
          <span>{formatDate(publishDate)}</span>
        </div>
        
        <!-- Tiempo de lectura -->
        <div class="flex items-center gap-1">
          <Clock class="w-4 h-4" />
          <span>{estimatedReadTime} min</span>
        </div>
      </div>

      <!-- CTA -->
      <a 
        href={`/blog/${slug}`}
        class="text-accent hover:text-accent-dark font-medium transition-colors duration-200 hover:underline flex items-center gap-1"
      >
        Leer más
        <svg class="w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>